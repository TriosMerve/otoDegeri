:root {
  --primary: #141414;
  --primary-75: #dedede;
  --primary-100: #858585;
  --primary-200: #424242;
  --primary-300: #282828;
  --primary-400: #1f1e1e;
  --primary-500: #151414;
  --primary-600: #0a0909;
  --primary-700: #030303;
  --secondary: #ff1656;
  --black: #000000;
  --white: #ffffff;

  --gray-50: #f9f9f9;
  --gray-75: #ededed;
  --gray-100: #ededed;
  --gray-125: #dbd9d9;
  --gray-150: #9c9c9c;
  --gray-200: #808080;
  --gray-250: #6e6e6e;
  --gray-300: #525252;
  --gray-500: #c4c4c4;

  --success: #29ae29;
  --warning: #ffc62a;
  --error: #ef4444;

  --orange: #ed7615;
  --lavender: #6e3cf5;
  --sussie: #38e1f1;
  --blue: #0082ff;
}

$colors: (
  "primary": var(--primary),
  "primary-75": var(--primary-75),
  "primary-100": var(--primary-100),
  "primary-200": var(--primary-200),
  "primary-300": var(--primary-300),
  "primary-400": var(--primary-400),
  "primary-500": var(--primary-500),
  "primary-600": var(--primary-600),
  "primary-700": var(--primary-700),
  "secondary": var(--secondary),
  "black": var(--black),
  "white": var(--whit),
  "gray-50": var(--gray-50),
  "gray-75": var(--gray-75),
  "gray-100": var(--gray-100),
  "gray-125": var(--gray-125),
  "gray-150": var(--gray-150),
  "gray-200": var(--gray-200),
  "gray-250": var(--gray-250),
  "gray-300": var(--gray-300),
  "gray-500": var(--gray-500),
  "success": var(--success),
  "warning": var(--warning),
  "error": var(--error),
  "orange": var(--orange),
  "lavender": var(--lavender),
  "sussie": var(--sussie),
  "blue": var(--blue),
);
@mixin generate-button-classes($colors) {
  @each $name, $color in $colors {
    .button-#{$name} {
      &:not(.disabled) {
        background-color: $color !important;
        border: 1px solid $color !important;
        color: var(--white) !important;
        @media screen and (min-width: 992px) {
          &:hover {
            background-color: var(--white) !important;
            color: $color !important;
          }
        }
      }
    }
    .button-#{$name}-outline {
      &:not(.disabled) {
        background-color: rgba(0, 0, 0, 0);
        border: 1px solid $color;
        color: $color;
        @media screen and (min-width: 992px) {
          &:hover {
            background-color: var(--white) !important;
            color: $color !important;
            img {
              filter: none !important;
            }
          }
        }
      }
    }
  }
}
@include generate-button-classes($colors);

@mixin generate-bg-classes($colors) {
  @each $name, $color in $colors {
    .bg-#{$name} {
      background-color: $color;
    }
  }
}
@include generate-bg-classes($colors);

.container {
  max-width: calc(1216px + 60px);
  margin: 0 auto;
  width: 100%;
  padding-left: 30px;
  padding-right: 30px;
  @media screen and (max-width: 480px) {
    padding-left: 16px;
    padding-right: 16px;
  }
}

.fixBtn {
  height: 45px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  color: var(--black);
  background-color: var(--gray-50);
  transition: all 0.3s linear;
  border: 1px solid var(--gray-50);
  border-radius: 8px;
  font-weight: 600;
  font-size: 15px;
  min-width: 180px;
  @media screen and (max-width: 991.98px) {
    padding: 0 8px;
    height: 40px;
    border-radius: 30px;
    font-size: 14px;
    font-weight: 500;
    img {
      height: 12px;
    }
  }
  &.disabled {
    background-color: #cccccc;
    border: 1px solid #cccccc;
    color: #ffffff;
    cursor: default;
    pointer-events: none;
  }
  @media screen and (min-width: 992px) {
    &:not(.disabled) {
      &:hover {
        color: var(--gray-50);
        background-color: var(--black);
        img {
          filter: invert(1);
        }
      }
    }
  }
}

.textLink {
  color: var(--gray-250);
  font-weight: 500;
  font-size: 14px;
  position: relative;
  transition: all 0.3s linear;
  display: inline-flex;
  &:after {
    content: "";
    border-bottom: 1px solid var(--gray-250);
    position: absolute;
    left: 0;
    width: 100%;
    bottom: -2px;
    transition: all 0.3s linear;
  }
  @media screen and (min-width: 992px) {
    &:hover {
      color: var(--secondary);
      &:after {
        width: 0;
      }
    }
  }
}

.imageWrapper {
  width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }
  &.cover {
    img {
      min-width: 100%;
      min-height: 100%;
      object-fit: cover;
      max-width: auto;
      max-height: auto;
    }
  }
}

input,
button {
  outline: 0;
  &:focus {
    outline: 0;
  }
}

:focus-visible {
  outline: 0 !important;
}

.w-100{
  width: 100%!important;
}